name: 'User Management'
description: |-

  APIs to manage the User resource.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of users.'
      description: 'Get a list of users.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      pageSize:
        name: pageSize
        description: 'Size per page. Defaults to 20.'
        required: false
        example: 10
        type: integer
        custom: []
      page:
        name: page
        description: 'page to view'
        required: false
        example: 13
        type: integer
        custom: []
    cleanQueryParameters:
      pageSize: 10
      page: 13
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":54,"name":"Cecile Turcotte","email":"chelsea66@example.net","password":"$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\/.og\/at2.uheWG\/igi","created_at":"2023-04-30T11:06:26.000000Z","updated_at":"2023-04-30T11:06:26.000000Z"},{"id":55,"name":"Guadalupe Greenholt","email":"lewis.glover@example.com","password":"$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\/.og\/at2.uheWG\/igi","created_at":"2023-04-30T11:06:26.000000Z","updated_at":"2023-04-30T11:06:26.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
      id:
        name: id
        description: 'User ID'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      user_id: 1
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":56,"name":"Alanna Crist","email":"inienow@example.org","password":"$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\/.og\/at2.uheWG\/igi","created_at":"2023-04-30T11:06:26.000000Z","updated_at":"2023-04-30T11:06:26.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the User.'
        required: true
        example: 'John Doe'
        type: String
        custom: []
      email:
        name: email
        description: 'Email of the User.'
        required: true
        example: john@doe.com
        type: String
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":57,"name":"Marlene Prosacco","email":"hblanda@example.org","password":"$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\/.og\/at2.uheWG\/igi","created_at":"2023-04-30T11:06:26.000000Z","updated_at":"2023-04-30T11:06:26.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the User.'
        required: true
        example: 'John Doe'
        type: String
        custom: []
      email:
        name: email
        description: 'Email of the User.'
        required: true
        example: john@doe.com
        type: String
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":58,"name":"Theodora Rau","email":"gmertz@example.net","password":"$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\/.og\/at2.uheWG\/igi","created_at":"2023-04-30T11:06:26.000000Z","updated_at":"2023-04-30T11:06:26.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the User resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data" =>"success"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
